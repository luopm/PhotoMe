<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.luopm.photome.dao.UserMusicMapper" >
  <resultMap id="BaseResultMap" type="com.luopm.photome.model.UserMusic" >
    <id column="photome_usermusic_id" property="photomeUsermusicId" jdbcType="INTEGER" />
    <result column="photome_usermusic_musiccode" property="photomeUsermusicMusiccode" jdbcType="VARCHAR" />
    <result column="photome_usermusic_musiccreatdate" property="photomeUsermusicMusiccreatdate" jdbcType="TIMESTAMP" />
    <result column="photome_usermusic_musicname" property="photomeUsermusicMusicname" jdbcType="VARCHAR" />
    <result column="photome_usermusic_musicsinger" property="photomeUsermusicMusicsinger" jdbcType="VARCHAR" />
    <result column="photome_usermusic_musicalbum" property="photomeUsermusicMusicalbum" jdbcType="VARCHAR" />
    <result column="photome_usermusic_musicduration" property="photomeUsermusicMusicduration" jdbcType="INTEGER" />
    <result column="photome_usermusic_musicsize" property="photomeUsermusicMusicsize" jdbcType="INTEGER" />
    <result column="photome_usermusic_musicimg" property="photomeUsermusicMusicimg" jdbcType="VARCHAR" />
    <result column="photome_usermusic_musiclrc" property="photomeUsermusicMusiclrc" jdbcType="LONGVARCHAR" />
    <result column="photome_usermusic_musicurl" property="photomeUsermusicMusicurl" jdbcType="VARCHAR" />
    <result column="photome_usermusic_musicuser" property="photomeUsermusicMusicuser" jdbcType="LONGVARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.luopm.photome.model.UserMusic" extends="BaseResultMap" >
    <result column="photome_usermusic_musicuser" property="photomeUsermusicMusicuser" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    photome_usermusic_id, photome_usermusic_musiccode, photome_usermusic_musiccreatdate, 
    photome_usermusic_musicname, photome_usermusic_musicsinger, photome_usermusic_musicalbum, 
    photome_usermusic_musicduration, photome_usermusic_musicsize, photome_usermusic_musicimg, 
    photome_usermusic_musiclrc, photome_usermusic_musicurl
  </sql>
  <sql id="Blob_Column_List" >
    photome_usermusic_musicuser
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.luopm.photome.model.UserMusicExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from photome_usermusic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.luopm.photome.model.UserMusicExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from photome_usermusic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from photome_usermusic
    where photome_usermusic_id = #{photomeUsermusicId,jdbcType=INTEGER}
  </select>

  <select id="selectALLMusic" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from photome_usermusic
  </select>

  <select id="selectMusicByUserName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from photome_usermusic
    where photome_usermusic_musicuser like CONCAT('%',#{UserName,jdbcType=LONGVARCHAR},'%')
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from photome_usermusic
    where photome_usermusic_id = #{photomeUsermusicId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.luopm.photome.model.UserMusicExample" >
    delete from photome_usermusic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.luopm.photome.model.UserMusic" >
    insert into photome_usermusic (photome_usermusic_id, photome_usermusic_musiccode, 
      photome_usermusic_musiccreatdate, photome_usermusic_musicname, 
      photome_usermusic_musicsinger, photome_usermusic_musicalbum, 
      photome_usermusic_musicduration, photome_usermusic_musicsize, 
      photome_usermusic_musicimg, photome_usermusic_musiclrc, 
      photome_usermusic_musicurl, photome_usermusic_musicuser
      )
    values (#{photomeUsermusicId,jdbcType=INTEGER}, #{photomeUsermusicMusiccode,jdbcType=VARCHAR}, 
      #{photomeUsermusicMusiccreatdate,jdbcType=TIMESTAMP}, #{photomeUsermusicMusicname,jdbcType=VARCHAR}, 
      #{photomeUsermusicMusicsinger,jdbcType=VARCHAR}, #{photomeUsermusicMusicalbum,jdbcType=VARCHAR}, 
      #{photomeUsermusicMusicduration,jdbcType=INTEGER}, #{photomeUsermusicMusicsize,jdbcType=INTEGER}, 
      #{photomeUsermusicMusicimg,jdbcType=VARCHAR}, #{photomeUsermusicMusiclrc,jdbcType=VARCHAR}, 
      #{photomeUsermusicMusicurl,jdbcType=VARCHAR}, #{photomeUsermusicMusicuser,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.luopm.photome.model.UserMusic" >
    insert into photome_usermusic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="photomeUsermusicId != null" >
        photome_usermusic_id,
      </if>
      <if test="photomeUsermusicMusiccode != null" >
        photome_usermusic_musiccode,
      </if>
      <if test="photomeUsermusicMusiccreatdate != null" >
        photome_usermusic_musiccreatdate,
      </if>
      <if test="photomeUsermusicMusicname != null" >
        photome_usermusic_musicname,
      </if>
      <if test="photomeUsermusicMusicsinger != null" >
        photome_usermusic_musicsinger,
      </if>
      <if test="photomeUsermusicMusicalbum != null" >
        photome_usermusic_musicalbum,
      </if>
      <if test="photomeUsermusicMusicduration != null" >
        photome_usermusic_musicduration,
      </if>
      <if test="photomeUsermusicMusicsize != null" >
        photome_usermusic_musicsize,
      </if>
      <if test="photomeUsermusicMusicimg != null" >
        photome_usermusic_musicimg,
      </if>
      <if test="photomeUsermusicMusiclrc != null" >
        photome_usermusic_musiclrc,
      </if>
      <if test="photomeUsermusicMusicurl != null" >
        photome_usermusic_musicurl,
      </if>
      <if test="photomeUsermusicMusicuser != null" >
        photome_usermusic_musicuser,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="photomeUsermusicId != null" >
        #{photomeUsermusicId,jdbcType=INTEGER},
      </if>
      <if test="photomeUsermusicMusiccode != null" >
        #{photomeUsermusicMusiccode,jdbcType=VARCHAR},
      </if>
      <if test="photomeUsermusicMusiccreatdate != null" >
        #{photomeUsermusicMusiccreatdate,jdbcType=TIMESTAMP},
      </if>
      <if test="photomeUsermusicMusicname != null" >
        #{photomeUsermusicMusicname,jdbcType=VARCHAR},
      </if>
      <if test="photomeUsermusicMusicsinger != null" >
        #{photomeUsermusicMusicsinger,jdbcType=VARCHAR},
      </if>
      <if test="photomeUsermusicMusicalbum != null" >
        #{photomeUsermusicMusicalbum,jdbcType=VARCHAR},
      </if>
      <if test="photomeUsermusicMusicduration != null" >
        #{photomeUsermusicMusicduration,jdbcType=INTEGER},
      </if>
      <if test="photomeUsermusicMusicsize != null" >
        #{photomeUsermusicMusicsize,jdbcType=INTEGER},
      </if>
      <if test="photomeUsermusicMusicimg != null" >
        #{photomeUsermusicMusicimg,jdbcType=VARCHAR},
      </if>
      <if test="photomeUsermusicMusiclrc != null" >
        #{photomeUsermusicMusiclrc,jdbcType=VARCHAR},
      </if>
      <if test="photomeUsermusicMusicurl != null" >
        #{photomeUsermusicMusicurl,jdbcType=VARCHAR},
      </if>
      <if test="photomeUsermusicMusicuser != null" >
        #{photomeUsermusicMusicuser,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.luopm.photome.model.UserMusicExample" resultType="java.lang.Integer" >
    select count(*) from photome_usermusic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update photome_usermusic
    <set >
      <if test="record.photomeUsermusicId != null" >
        photome_usermusic_id = #{record.photomeUsermusicId,jdbcType=INTEGER},
      </if>
      <if test="record.photomeUsermusicMusiccode != null" >
        photome_usermusic_musiccode = #{record.photomeUsermusicMusiccode,jdbcType=VARCHAR},
      </if>
      <if test="record.photomeUsermusicMusiccreatdate != null" >
        photome_usermusic_musiccreatdate = #{record.photomeUsermusicMusiccreatdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.photomeUsermusicMusicname != null" >
        photome_usermusic_musicname = #{record.photomeUsermusicMusicname,jdbcType=VARCHAR},
      </if>
      <if test="record.photomeUsermusicMusicsinger != null" >
        photome_usermusic_musicsinger = #{record.photomeUsermusicMusicsinger,jdbcType=VARCHAR},
      </if>
      <if test="record.photomeUsermusicMusicalbum != null" >
        photome_usermusic_musicalbum = #{record.photomeUsermusicMusicalbum,jdbcType=VARCHAR},
      </if>
      <if test="record.photomeUsermusicMusicduration != null" >
        photome_usermusic_musicduration = #{record.photomeUsermusicMusicduration,jdbcType=INTEGER},
      </if>
      <if test="record.photomeUsermusicMusicsize != null" >
        photome_usermusic_musicsize = #{record.photomeUsermusicMusicsize,jdbcType=INTEGER},
      </if>
      <if test="record.photomeUsermusicMusicimg != null" >
        photome_usermusic_musicimg = #{record.photomeUsermusicMusicimg,jdbcType=VARCHAR},
      </if>
      <if test="record.photomeUsermusicMusiclrc != null" >
        photome_usermusic_musiclrc = #{record.photomeUsermusicMusiclrc,jdbcType=VARCHAR},
      </if>
      <if test="record.photomeUsermusicMusicurl != null" >
        photome_usermusic_musicurl = #{record.photomeUsermusicMusicurl,jdbcType=VARCHAR},
      </if>
      <if test="record.photomeUsermusicMusicuser != null" >
        photome_usermusic_musicuser = #{record.photomeUsermusicMusicuser,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update photome_usermusic
    set photome_usermusic_id = #{record.photomeUsermusicId,jdbcType=INTEGER},
      photome_usermusic_musiccode = #{record.photomeUsermusicMusiccode,jdbcType=VARCHAR},
      photome_usermusic_musiccreatdate = #{record.photomeUsermusicMusiccreatdate,jdbcType=TIMESTAMP},
      photome_usermusic_musicname = #{record.photomeUsermusicMusicname,jdbcType=VARCHAR},
      photome_usermusic_musicsinger = #{record.photomeUsermusicMusicsinger,jdbcType=VARCHAR},
      photome_usermusic_musicalbum = #{record.photomeUsermusicMusicalbum,jdbcType=VARCHAR},
      photome_usermusic_musicduration = #{record.photomeUsermusicMusicduration,jdbcType=INTEGER},
      photome_usermusic_musicsize = #{record.photomeUsermusicMusicsize,jdbcType=INTEGER},
      photome_usermusic_musicimg = #{record.photomeUsermusicMusicimg,jdbcType=VARCHAR},
      photome_usermusic_musiclrc = #{record.photomeUsermusicMusiclrc,jdbcType=VARCHAR},
      photome_usermusic_musicurl = #{record.photomeUsermusicMusicurl,jdbcType=VARCHAR},
      photome_usermusic_musicuser = #{record.photomeUsermusicMusicuser,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update photome_usermusic
    set photome_usermusic_id = #{record.photomeUsermusicId,jdbcType=INTEGER},
      photome_usermusic_musiccode = #{record.photomeUsermusicMusiccode,jdbcType=VARCHAR},
      photome_usermusic_musiccreatdate = #{record.photomeUsermusicMusiccreatdate,jdbcType=TIMESTAMP},
      photome_usermusic_musicname = #{record.photomeUsermusicMusicname,jdbcType=VARCHAR},
      photome_usermusic_musicsinger = #{record.photomeUsermusicMusicsinger,jdbcType=VARCHAR},
      photome_usermusic_musicalbum = #{record.photomeUsermusicMusicalbum,jdbcType=VARCHAR},
      photome_usermusic_musicduration = #{record.photomeUsermusicMusicduration,jdbcType=INTEGER},
      photome_usermusic_musicsize = #{record.photomeUsermusicMusicsize,jdbcType=INTEGER},
      photome_usermusic_musicimg = #{record.photomeUsermusicMusicimg,jdbcType=VARCHAR},
      photome_usermusic_musiclrc = #{record.photomeUsermusicMusiclrc,jdbcType=VARCHAR},
      photome_usermusic_musicurl = #{record.photomeUsermusicMusicurl,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.luopm.photome.model.UserMusic" >
    update photome_usermusic
    <set >
      <if test="photomeUsermusicMusiccode != null" >
        photome_usermusic_musiccode = #{photomeUsermusicMusiccode,jdbcType=VARCHAR},
      </if>
      <if test="photomeUsermusicMusiccreatdate != null" >
        photome_usermusic_musiccreatdate = #{photomeUsermusicMusiccreatdate,jdbcType=TIMESTAMP},
      </if>
      <if test="photomeUsermusicMusicname != null" >
        photome_usermusic_musicname = #{photomeUsermusicMusicname,jdbcType=VARCHAR},
      </if>
      <if test="photomeUsermusicMusicsinger != null" >
        photome_usermusic_musicsinger = #{photomeUsermusicMusicsinger,jdbcType=VARCHAR},
      </if>
      <if test="photomeUsermusicMusicalbum != null" >
        photome_usermusic_musicalbum = #{photomeUsermusicMusicalbum,jdbcType=VARCHAR},
      </if>
      <if test="photomeUsermusicMusicduration != null" >
        photome_usermusic_musicduration = #{photomeUsermusicMusicduration,jdbcType=INTEGER},
      </if>
      <if test="photomeUsermusicMusicsize != null" >
        photome_usermusic_musicsize = #{photomeUsermusicMusicsize,jdbcType=INTEGER},
      </if>
      <if test="photomeUsermusicMusicimg != null" >
        photome_usermusic_musicimg = #{photomeUsermusicMusicimg,jdbcType=VARCHAR},
      </if>
      <if test="photomeUsermusicMusiclrc != null" >
        photome_usermusic_musiclrc = #{photomeUsermusicMusiclrc,jdbcType=VARCHAR},
      </if>
      <if test="photomeUsermusicMusicurl != null" >
        photome_usermusic_musicurl = #{photomeUsermusicMusicurl,jdbcType=VARCHAR},
      </if>
      <if test="photomeUsermusicMusicuser != null" >
        photome_usermusic_musicuser = #{photomeUsermusicMusicuser,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where photome_usermusic_id = #{photomeUsermusicId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.luopm.photome.model.UserMusic" >
    update photome_usermusic
    set photome_usermusic_musiccode = #{photomeUsermusicMusiccode,jdbcType=VARCHAR},
      photome_usermusic_musiccreatdate = #{photomeUsermusicMusiccreatdate,jdbcType=TIMESTAMP},
      photome_usermusic_musicname = #{photomeUsermusicMusicname,jdbcType=VARCHAR},
      photome_usermusic_musicsinger = #{photomeUsermusicMusicsinger,jdbcType=VARCHAR},
      photome_usermusic_musicalbum = #{photomeUsermusicMusicalbum,jdbcType=VARCHAR},
      photome_usermusic_musicduration = #{photomeUsermusicMusicduration,jdbcType=INTEGER},
      photome_usermusic_musicsize = #{photomeUsermusicMusicsize,jdbcType=INTEGER},
      photome_usermusic_musicimg = #{photomeUsermusicMusicimg,jdbcType=VARCHAR},
      photome_usermusic_musiclrc = #{photomeUsermusicMusiclrc,jdbcType=VARCHAR},
      photome_usermusic_musicurl = #{photomeUsermusicMusicurl,jdbcType=VARCHAR},
      photome_usermusic_musicuser = #{photomeUsermusicMusicuser,jdbcType=LONGVARCHAR}
    where photome_usermusic_id = #{photomeUsermusicId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.luopm.photome.model.UserMusic" >
    update photome_usermusic
    set photome_usermusic_musiccode = #{photomeUsermusicMusiccode,jdbcType=VARCHAR},
      photome_usermusic_musiccreatdate = #{photomeUsermusicMusiccreatdate,jdbcType=TIMESTAMP},
      photome_usermusic_musicname = #{photomeUsermusicMusicname,jdbcType=VARCHAR},
      photome_usermusic_musicsinger = #{photomeUsermusicMusicsinger,jdbcType=VARCHAR},
      photome_usermusic_musicalbum = #{photomeUsermusicMusicalbum,jdbcType=VARCHAR},
      photome_usermusic_musicduration = #{photomeUsermusicMusicduration,jdbcType=INTEGER},
      photome_usermusic_musicsize = #{photomeUsermusicMusicsize,jdbcType=INTEGER},
      photome_usermusic_musicimg = #{photomeUsermusicMusicimg,jdbcType=VARCHAR},
      photome_usermusic_musiclrc = #{photomeUsermusicMusiclrc,jdbcType=VARCHAR},
      photome_usermusic_musicurl = #{photomeUsermusicMusicurl,jdbcType=VARCHAR}
    where photome_usermusic_id = #{photomeUsermusicId,jdbcType=INTEGER}
  </update>
</mapper>